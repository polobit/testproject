package com.agilecrm.queues.cron;

import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.agilecrm.AgileQueues;
import com.agilecrm.util.EmailUtil;
import com.google.appengine.api.taskqueue.Queue;
import com.google.appengine.api.taskqueue.QueueFactory;
import com.google.appengine.api.taskqueue.QueueStatistics;
import com.thirdparty.sendgrid.SendGrid;

/**
 * <code>TaskletCounterServlet</code> is the cron servlet to count the tasks in 
 * the queues (Bulk-campaign-pull-queue, Bulk-email-pull-queue, 
 * Normal-campaign-pull-queue, Normal-email-pull-queue and campaign-log-queue) 
 * that are running in the appengine.
 * 
 * The purpose is to find whether the tasks are running in the queue properly.
 * In case the tasks count increases beyond 10,000 and leased count shows 0, 
 * that means there is some issue with the queue and it is not processing tasks.
 * We need to alert the support team with an email. 
 * 
 * @author ravitheja
 * 
 */
@SuppressWarnings("serial")
public class TaskletCounterServlet extends HttpServlet {

    /**
     * Running Tasks safe limit
     */
    public static final int SAFE_COUNT = 10000;

    public void doGet(HttpServletRequest req, HttpServletResponse res) {
    	doPost(req, res);
    }
    
    public void doPost(HttpServletRequest req, HttpServletResponse res) {

    	String[] queueNames = {AgileQueues.BULK_CAMPAIGN_PULL_QUEUE, AgileQueues.BULK_EMAIL_PULL_QUEUE, 
    			AgileQueues.NORMAL_CAMPAIGN_PULL_QUEUE, AgileQueues.NORMAL_EMAIL_PULL_QUEUE, 
    			AgileQueues.CAMPAIGN_LOG_QUEUE}; 

    	long tasksCount;
    	long leasedCount;
    	Long oldestEta = 0l;
    	
    	StringBuilder alertQueues = new StringBuilder();
    	int alertCount = 0;
    	
    	for (String queueName : queueNames) {
    	    Queue queue = QueueFactory.getQueue(queueName);				
    		if(null != queue) {
    			QueueStatistics queueStats = queue.fetchStatistics();
	    		if(null != queueStats) {
		    		tasksCount = queueStats.getNumTasks();
		    		leasedCount = queueStats.getExecutedLastMinute();
		    		oldestEta = queueStats.getOldestEtaUsec();
	    			
		    		System.out.println(queueName + " -+- " + tasksCount + " -+- " + leasedCount + " -+- " + oldestEta);
		    		
	    			if(tasksCount > SAFE_COUNT && leasedCount == 0) {
	    				if(alertCount > 1) {
	    					alertQueues.insert(0, queueName + ", ");
	    				} else {
	    					if(alertCount == 1) alertQueues.append(" and ");
	    					alertQueues.append(queueName);
	    				} 
	    				alertCount++;
	    			}
	    		}
    		}
    	}
    	
		if(alertCount > 0) {
			System.out.println("alertQueues --> " + alertQueues);
			
	        StringBuilder html = new StringBuilder();
	        html.append(EmailUtil.templateHeader("Tasks count in queue is high."));
	        html.append("<p>This is an AUTO-GENERATED ALERT MAIL.</p> <br> The Task count in the Queue(s) (");
	        html.append(alertQueues.toString());
	        html.append(") has exceeded the safe limit (10,000), while the leased count is 0 for more than a minute. ");
	        html.append(EmailUtil.templateFooter());

			SendGrid.sendMail("stats@agilecrm.com", "Agile CRM", "naresh@agilecrm.com, rahul@agilecrm.com, raja@agilecrm.com ", 
					null, null, "Tasklets count limit exceeded - Autogenerated mail.", null, html.toString(), null);
		}
    }

}
